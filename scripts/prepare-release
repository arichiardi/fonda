#!/usr/bin/env bash

set -euo pipefail

script_dir="$(dirname $(readlink -f $0))"

do_usage() {
    echo -n
    echo
    echo "Prepare for releasing a jar using Maven."
    echo
    echo "Usage: $0 -p <project-name>"
    echo
    echo "Options:"
    echo "  -h --help                 Show this screen."
    echo "  -s --snapshot             Append -SNAPSHOT to the version."
    echo "  -p --tag-prefix=<prefix>  The prefix string as displayed in git tag."
    exit 1
}

tag_prefix=

set +e
TEMP=$(getopt -o h:sp: --long help,snapshot,tag-prefix: -n "$(basename $0)" -- "$@")
set -e
eval set -- "$TEMP"

wants_snapshot=

# extract options and their arguments into variables.
while true ; do
    case "$1" in
        -s|--snapshot) wants_snapshot="yes" ; shift ;;
        -p|--tag-prefix) tag_prefix="$2" ; shift 2 ;;
        -h|--help) shift ; do_usage ; break ;;
        --) shift ; break ;;
        *) do_usage ; exit 1 ;;
    esac
done

tag_prefix="${tag_prefix:-v}"
version="PLACEHOLDER"

if [[ "yes" = "$wants_snapshot" ]] ; then
    version=$("$script_dir"/version --tag-prefix "$tag_prefix" --snapshot)
else
    version=$("$script_dir"/version --tag-prefix "$tag_prefix")
fi

echo "Set project.clj version to $version"
set +e
lein trampoline change version set "\"$version\""
set -e

echo "Set pom.xml version to $version"
mvn -B versions:set -DgenerateBackupPoms=false -DnewVersion="$version"

# this is what lerna produces for monorepo
tag_with_version=$tag_prefix$version

echo "Set package.json version to $version"
yarn version --new-version "$version" --no-git-tag-version

echo "Commit and tag $tag_with_version"
git add project.clj pom.xml package.json
git commit -m "Release version $version"
git tag -sa --message "Release version $version" "$tag_with_version"
